FORMAT: 1A
HOST: http://api.simkl.com

# Simkl

<table>
    <tr>
        <td width="85" align="center" valign="top"><a href="http://simkl.com" target="_blank"><img src="http://i.simkl.com/img_tv/apiary_logo_api.png" alt="Simkl" width="68" height="67"/></a></td>
      <td>We’ve worked very hard to make <a href="http://simkl.com/" target="_blank">Simkl</a>  the dream "TV, Anime and Movie Tracker". However, chances are it doesn’t do 100% of what you need it to do. Luckily for you, we added an API so you can extend Simkl’s functionality.</td>
  </tr>
    <tr>
      <td colspan="2"><br><b>Useful Links:</b><br>
      <a href="http://simkl.com/">Simkl.com</a> &nbsp; ∙ &nbsp;
      <a href="http://simkl.com/apps/manage/">Manage Apps</a> &nbsp; ∙ &nbsp;
      <a href="https://plus.google.com/u/0/communities/106081147921797342801/stream/e377d10b-b3dc-411b-9dd2-dd1017da75a4">What's New</a> &nbsp; ∙ &nbsp;
      <a href="http://support.simkl.com/forums/264009-top-ideas-from-the-community/category/86437-api">Feature Requests</a> &nbsp; ∙ &nbsp;
      <a href="https://plus.google.com/u/0/communities/106081147921797342801">Developer Group</a>
      
      </td>
    </tr>
</table>

## Quickstart
All API access is over HTTP. All responses are returned as JSON. The API is (mostly) RESTful. Here's what you need to know to get started quickly:

### Use Cases
The Simkl API lets you build a variety of applications and scripts to integrate Simkl with your apps, show Simkl data in other contexts, and update your watch history from various locations.

Here are some examples of the things you can build with the Simkl API:

- A browser extension to quickly mark as watched or add to your watchlist from any web page.
- A Movie, TV or Anime app for iOS or Android.
- Plugin for your favorite media center app to sync your watch history with Simkl.

### Api URL
`http://api.simkl.com/`
### Verbs
HTTP Verb|Description
---|----
`GET`| Retrieve the item.  Success returns `200` status code.
`POST`| Create a new item.  Success returns `201` status code.
`DELETE`| Delete the item. Success returns `200` or `204` status code.

### HTTP Status Codes
The Simkl API attempts to return appropriate HTTP status codes for every request.

Code|Text|Description
---|---|----
`200`| OK | Success!
`201`| OK | Success - *new resource created (POST)*
`204`| OK | Success - *no content to return (DELETE)*
`400`| Bad Request | The request was invalid or cannot be otherwise served. An accompanying error message will explain further.
`401`| Unauthorized | [Authentication credentials] (#reference/authentication-oauth-2.0) were missing or incorrect.
`403`| Forbidden | The request is understood, but it has been refused or access is not allowed. An accompanying error message will explain why. This code is used whe using invalid API key or unapproved app or requests are being denied due to API limits.
`404`| Not Found | The URI requested is invalid or the resource requested. Also returned when the requested format is not supported by the requested method.
`405`| Not Found | *[IN_DEV]*
`409`| Unauthorized | *[IN_DEV]* Conflict - resource already created
`412`| *[IN_DEV]* | *[IN_DEV]*
`422`| *[IN_DEV]* | *[IN_DEV]*
`429`| *[IN_DEV]* | Rate Limit Exceeded
`500`| Internal Server Error | Something is broken. Please post to the [developer forums] (https://plus.google.com/u/0/communities/106081147921797342801) so the Simkl team can investigate.
`502`| Bad Gateway | Simkl is down or being upgraded.
`503`| Service Unavailable | The Simkl servers are up, but overloaded with requests. Try again later.

### Required Headers
When making API calls you'lll need to send some headers to identify your app.

Header|Value
---|----
`Content-Type` * | `application/json`
`Simkl-API-Key` * | Your `client_id` listed under [your Simkl applications] (http://simkl.com/apps/manage/).

### Dates
[In Development] Currently dates are returned as (GMT - 05:00 New York time zone)

All dates will be GMT and returned in the ISO 8601 format like `2015-03-15T15:30:11.000Z. Adjust 
accordingly in your app for the user's local timezone.

### Standard Media Objects

All methods will accept or return standard media objects for `movie`, `show`, `season`, `episode` items. 
Here are examples for all minimal objects:

<table>
    <tr>
        <td align="center" valign="top"><strong>movie</strong></td>
      <td>
<pre>Movie example:<code>{
    "title":"Terminator 3: Rise of the Machines",
    "year":2003,
    "ids":{
        "simkl":53536,
        "imdb":"tt0181852",
        "tmdb":296
    }
}</code></pre>
<pre>Example when only id is known:<code>{
    "ids":{
        "simkl":53536
    }
}</code></pre></td>
    </tr>
    
    
    <tr>
      <td align="center" valign="top"><strong>show</strong></td>
      <td>
<pre>TV Show example:<code>{
    "title":"The Walking Dead",
    "year":2010,
    "ids":{
        "simkl":2090,
        "tvdb":153021,
        "imdb":"tt1520211"
    },
    "seasons": [
            {
                "number": 1,
                "episodes": [
                    {
                        "number": 1
                    },
                    {
                        "number": 2
                    }
                ]
            }
        ]
    ]
}</code></pre>


<pre>Anime example:<code>{
    "title": "Attack on Titan",
    "year": 2013,
    "ids": {
        "simkl": 39687,
        "mal": 16498,
        "tvdb": 267440,
        "imdb": "tt2560140",
        "anidb": 9541
    },
    "seasons":[ 
        {
            "number": 2
        }
    ]
}</code></td>
    </tr>
</table>


## Help us improve!
If you find any error or omission on the documentation, or you’d like us to cover or clarify something, just [let us know] (http://support.simkl.com/forums/264009-top-ideas-from-the-community/category/86437-api) and we’ll try to make you happy. You are also welcome to [join our development community] (https://plus.google.com/u/0/communities/106081147921797342801).




# Group Authentication - OAuth 2.0
There's no reinventing the wheel here so the API uses OAuth2. 

Requesting user assosiated information requires `token` that needs to be included in all request headers made to the API.

To obtain a `client_id` and `client_secret`, create an application on the simkl website. Here are some helpful links to get your started.
...

To make calls on behalf of a user you have to obtain an `access_token`. To do this, first use **http://simkl.com/oauth/authorize** method to get `code` and then post it in JSON format to **http://api.simkl.com/oauth/token** url. In response you'll get the `access_token`.
For more details see Authorize and Token sections below.

## Authorize [/oauth/authorize?response_type=code&client_id=client_id&redirect_uri=redirect_uri&state=state]
### Authorize Application [GET]
Redirect a user to this URL. There the user will grant permissions for you app and if everything is fine you'll get a `code` which you can exchange for `access_token`. 
Once you have an access token you can use it to make calls on behalf of a user.

**Note:** You should use the http://simkl.com domain when creating this URL and not the API URL.

+ Parameters
    + response_type (string) ... must be "code"
    + client_id (string) ... Get this from your app settings
    + redirect_uri (string) ... URI in your app settings
    + state (optional, string) ... your custom variable
  
+ Request http://simkl.com/oauth/authorize?response_type=code&client_id=c7be48f1559a6d794w1925237c626326c7bsdfsa559a6d794w1925137c626316&redirect_uri=http://yourdomain.com/oauth.html
        
        
+ Response 200

## Token [/oauth/token]
### Exchange code for access_token [POST]
The redirect to your application in the step above will include a `code` parameter which you can exchange for an `access_token` using this method. 

Save the `access_token` somewhere safe. From that moment your app can authenticate the user by sending the `Authorization` header.

<h4>JSON POST DATA</h4>
Key|Type|Value
---|----|-----
code|string|code you've get from authorize method
client_id|string|Get this in your app settings
client_secret|string|Get this in your app settings
redirect_uri|string|Your URI in your app settings 
grant_type|string|`authorization_code` or `refresh_token`


+ Request (application/json)

        {
            "code"          : "d7be48f1559a6d794w1925237c626326c7dddfsa559a6d794w1925137c626313",
            "client_id"     : "c7be48f1559a6d794w1925237c626326c7bsdfsa559a6d794w1925137c626352",
            "client_secret" : "a9be48f1529a2d794w1925237c626326c7dddfsa559a6d794w1925137c626321",
            "redirect_uri"  : "http://yourdomain.com/oauth.html",
            "grant_type"    : "authorization_code"
        }
+ Response 200 (application/json)
Valid `code` will generate you the `access_token`
    + Body

            { 
                "access_token"  : "b5be48f1529a2d794f1925237c626326c7dddfsa559a6d794w1925137c622329",
                "token_type"    : "bearer", 
                "scope"         : "public"
            }
+ Response 401 (application/json)
Invalid code will give you a 401 error
    + Body

            { 
                "error"  : "grant_error"
            }

# Group Sync
If you want to store all of your watched history or download your history list from simkl then *syncing* is what you are looking for.  

## Add to History [/sync/history]
### Add items to watched/watching history [POST]
<h4>OAuth Required</h4>
Add items to a user's watched history. You can pass shows,seasons,episodes and movies. If no episode for the show is passed then it will be marked as completed. If season will be specified then only episodes in those seasons will be marked.

if `watched_at` UTC datetime is passed then all will be marked as watched in the past. 

If `ids` field has more than 1 resources then we will search better.

<h4>JSON POST DATA</h4>
Key|Type|Value
---|----|-----
`movies`|array|Movie objects (see examples →) 
`shows`|array|Show objects

<h4>MEDIA OBJECTS POST DATA</h4>
Key|Type|Value
---|----|-----
`item*`|object|movie, show or episode objects 
`watched_at`|datetime|UTC datetime when the item was watched

+ Request (application/json)
    + Header
            
            Authorization: Bearer [token]
            Simkl-API-Key: [client_id]

    + Body
    
            {
                "movies": [
                    {
                        "watched_at": "2011-12-03 13:44:00",
                        "title": "Terminator 3: Rise of the Machines",
                        "year": "2003",
                        "ids": {
                            "imdb": "tt0181852",
                            "tmdb": 296,
                            "simkl": 53536
                        }
                    },
                    {
                        "ids": {
                            "simkl": 210728
                        }
                    }
                ],
                "shows": [
                    {
                        "title": "Attack on Titan",
                        "year": 2013,
                        "ids": {
                            "simkl": 39687,
                            "mal": 16498,
                            "tvdb": 267440,
                            "imdb": "tt2560140",
                            "anidb": 9541
                        }
                    },
                    {
                        "title": "The Walking Dead",
                        "year": 2010,
                        "ids": {
                            "simkl": 2090,
                            "tvdb": 153021,
                            "imdb": "tt1520211"
                        },
                        "seasons": [
                            {
                                "watched_at": "2011-09-01 14:44:00",
                                "number": 2
                            },
                            {
                                "number": 1,
                                "episodes": [
                                    {
                                        "number": 1
                                    },
                                    {
                                        "number": 2
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }   

+ Response 200 (application/json)






